# 是否开启匿名访问
anonymousEnable=true

# max mqtt message size
maxMsgSize=524288

# 是否启用高性能消息处理，若启用，则mqtt的入栈，出栈过程消息会基于内存保存
highPerformance=false

# 是否开启tcp服务
startTcp=true
tcpPort=1883
# 是否开启tcp ssl 服务
startSslTcp=true
sslTcpPort=1884

#集群模式：1.基于发布订阅，集群主动push消息给Jmqtt; 2.基于poll，jmqtt主动从集群拉消息
clusterMode = 2
# 采用2.poll方式时，一次从集群中最多拉的消息数目和间隔拉取的时间(ms)
maxPollEventNum = 10
pollWaitInterval = 10

# 是否开启websocket服务,ws协议
startWebsocket=true
websocketPort=8883

# 是否开启websocket服务,wss协议
startSslWebsocket=true
sslWebsocketPort=8884

# cluster implement by akka
#clusterEventHandlerClass=org.jmqtt.broker.processor.dispatcher.akka.AkkaClusterEventHandler


# plugin class, details: www.mangdagou.com
sessionStoreClass=org.jmqtt.broker.store.rdb.RDBSessionStore
messageStoreClass=org.jmqtt.broker.store.rdb.RDBMessageStore
authValidClass=org.jmqtt.broker.acl.impl.DBAuthValid
clusterEventHandlerClass=org.jmqtt.broker.processor.dispatcher.rdb.RDBClusterEventHandler

# plugin class, details: www.mangdagou.com
# sessionStoreClass=org.jmqtt.broker.store.mem.MemSessionStore
# messageStoreClass=org.jmqtt.broker.store.mem.MemMessageStore
# authValidClass=org.jmqtt.broker.acl.impl.DefaultAuthValid
# clusterEventHandlerClass=org.jmqtt.broker.processor.dispatcher.mem.MemEventHandler


# plugin class, details: www.mangdagou.com
#sessionStoreClass=org.jmqtt.broker.store.redis.RedisSessionStore
#messageStoreClass=org.jmqtt.broker.store.redis.RedisMessageStore
#authValidClass=org.jmqtt.broker.acl.impl.DefaultAuthValid
#clusterEventHandlerClass=org.jmqtt.broker.processor.dispatcher.redis.RedisClusterEventHandler




## akka config name
akkaConfigName=akka
